{"backend_state":"init","kernel":"nlp_env","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"trust":true,"type":"settings"}
{"id":"b2f37a","input":"board = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]\nroundsPlayed = 0\nplayerScore = 0\ncomputerScore = 0\n\ndef displayBoard():\n    print(\" \" + board[1] + \" | \" + board[2] + \" | \" + board[3])\n    print(\"----------\")\n    print(\" \" + board[4] + \" | \" + board[5] + \" | \" + board[6])\n    print(\"----------\")\n    print(\" \" + board[7] + \" | \" + board[8] + \" | \" + board[9])\n\ndef scuttled(list, scuttled):\n    if board[1] == \"X\" and board[2] == \"X\" and board[3] == \"X\":\n        print(\"You have won! congratulations!\");\n        playerScore += 1\n        scuttled = 1\n        return scuttled\n    if board[4]== \"X\" and board[5]== \"X\" and board[6] == \"X\"\n        print(\"You have won! congratulations!\");\n        playerScore += 1\n        scuttled = 1\n        return scuttled\n    if board[7] == \"X\" and board[8] == \"X\" and board[9] == \"X\":\n        print(\"You have won! congratulations!\");\n        playerScore += 1\n        scuttled = 1\n        return scuttled\n    if board[1] == \"X\" and board[4] == \"X\" and board[7] == \"X\":\n        print(\"You have won! congratulations!\");\n        playerScore += 1\n        scuttled = 1\n        return scuttled\n    if board[2] == \"X\" and board[5] == \"X\" and board[8] == \"X\":\n        print(\"You have won! congratulations!\");\n        playerScore += 1\n        scuttled = 1\n        return scuttled\n    if board[3] == \"X\" and board[6] == \"X\" and board[9] == \"X\":\n        print(\"You have won! congratulations!\");\n        playerScore += 1\n        scuttled = 1\n        return scuttled\n    if board[1] == \"X\" and board[2] == \"X\" and board[3] == \"X\":\n        print(\"You have won! congratulations!\");\n        playerScore += 1\n        scuttled = 1\n        return scuttled\n    if board[1] == \"X\" and board[2] == \"X\" and board[3] == \"X\":\n        print(\"You have won! congratulations!\");\n        playerScore += 1\n        scuttled = 1\n        return scuttled\n\nprint(\"Welcome to Tic Tac Toe! Here are the rules of the game. You will start by going first, but the second round I will start. The aim of the game is to place your symbol (An X) in sequences of 3. This can be diagonal or Straight.\")\nprint(\"You will place 1 tile at a time. You can do this by entering the coordinate of tile in which you would like to place your X. The tiles are numbered from 1 in the top left, to 9 in the top right. Like this:\")\nprint(\" 1 | 2 | 3\")\nprint(\"----------\")\nprint(\" 4 | 5 | 6 \")\nprint(\"----------\")\nprint(\" 7 | 8 | 9 \")\nanswer = input(\"Ready to play? (yes/no) -> \")\nwhile answer.lower() != \"yes\" or answer.lower() != \"no\":\n    answer = input(\"That is not a valid response. Please enter either yes or no.\")\nwhile answer == \"yes\":\n    if roundsPlayed % 2 == 0:\n        scuttled\n        while scuttled == 0:\n        shot = input(\"Where would you like to put your first X? (1-9) -> \")\n        while shot > 10 and shot < 0:\n            shot = input(\"That is not a legal move. Please enter a value between 1 and 9.\")\n        board[shot - 1] = \"X\"\n        displayBoard()\n        if shot == 5:\n            print(\"I choose 1 for my first placement.\")\n            board[1] = \"O\"\n            displayBoard()\n        else:\n            print(\"I choose 5 for my first placement.\")\n            board[5] = \"O\"\n            displayBoard()\n        shot2 = input(\"Where would you like to put your second X? (1-9) -> \")\n        while shot2 > 10 and shot < 0:\n            shot2 = input(\"That is not a legal move. Please enter a value between 1 and 9.\")\n        offset = \n        if()","pos":0,"state":"done","type":"cell"}
{"id":"c2eae9","input":"","pos":1,"type":"cell"}
{"id":0,"time":1656523082148,"type":"user"}
{"last_load":1656431254916,"type":"file"}